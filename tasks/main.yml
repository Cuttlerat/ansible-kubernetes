---
- name: Assert kubernetes_node_type
  assert:
    that:
      - kubernetes_node_type in kubernetes_supported_node_type

- name: Ensure ca-certificates installed
  apt:
    name: ca-certificates
    state: present

- name: Ensure ca-certificates installed
  apt:
    name: ca-certificates
    state: present
  
- name: Add kubernetes key
  apt_key:
    id: '{{ kubernetes_apt_key_id }}'
    url: 'https://packages.cloud.google.com/apt/doc/apt-key.gpg'
    state: present
    
- name: Add kubernetes sources list
  apt_repository:
    repo: 'deb http://apt.kubernetes.io/ kubernetes-xenial main'
    state: present
  
- name: Install kubernetes (agent)
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - kubelet
    - kubectl
    - kubernetes-cni
  when: kubernetes_node_type == 'agent'

- name: Install kubernetes (master)
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - kubelet
    - kubectl
    - kubeadm
    - kubernetes-cni
  when: kubernetes_node_type == 'master'

- name: Fix network_plugin
  replace:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '\s\$KUBELET_NETWORK_ARGS'
    replace: ''
  register: kubeadm_conf

- name: Restart kubelet daemon
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet
  when: kubeadm_conf.changed

- name: Init cluster
  command: bash -c "kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ ansible_ssh_host }} --kubernetes-version stable-1.8 | grep -Eo 'kubeadm join.*$'"
  register: kubernetes_join
  when:
    - kubernetes_init_cluster
    - kubernetes_node_type == 'master'
    
- name: Join agents to cluster
  command: bash -c "{{ hostvars[item].kubernetes_join.stdout }}"
  when:
    - kubernetes_init_cluster
    - kubernetes_node_type == 'agent'
    - hostvars[item].kubernetes_join.stdout is defined
  with_items: "{{ group[groupname] }}"

- name: Fetching cluster config to local machine
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: /tmp/
    flat: yes
  when:
    - kubernetes_copy_config is defined
    - kubernetes_copy_config
    - kubernetes_node_type == 'master'
